From 4175f8fb887323702fc4f4005d3bf2ffbd719afa Mon Sep 17 00:00:00 2001
From: Vladimir Oltean <olteanv@gmail.com>
Date: Thu, 5 Dec 2019 11:50:28 +0200
Subject: [PATCH buildroot 04/18] net: dsa: sja1105: Increase SPI word size to
 32 bits

This is a hack, really, to increase the throughput of the DSPI
controller on LS1021A. A better solution would be to keep the word size
as 8, but make the spi-fsl-dspi driver batch together multiple 8-bit
words in order to fill a 32-bit TX FIFO entry.

Signed-off-by: Vladimir Oltean <olteanv@gmail.com>
---
 drivers/net/dsa/sja1105/sja1105_main.c        |  2 +-
 .../net/dsa/sja1105/sja1105_static_config.c   | 26 +++++++++++++++----
 2 files changed, 22 insertions(+), 6 deletions(-)

diff --git a/drivers/net/dsa/sja1105/sja1105_main.c b/drivers/net/dsa/sja1105/sja1105_main.c
index a51ac088c0bc..de9e4b6a833b 100644
--- a/drivers/net/dsa/sja1105/sja1105_main.c
+++ b/drivers/net/dsa/sja1105/sja1105_main.c
@@ -2080,7 +2080,7 @@ static int sja1105_probe(struct spi_device *spi)
 	spi_set_drvdata(spi, priv);
 
 	/* Configure the SPI bus */
-	spi->bits_per_word = 8;
+	spi->bits_per_word = 32;
 	rc = spi_setup(spi);
 	if (rc < 0) {
 		dev_err(dev, "Could not init SPI\n");
diff --git a/drivers/net/dsa/sja1105/sja1105_static_config.c b/drivers/net/dsa/sja1105/sja1105_static_config.c
index 0d03e13e9909..eb143a6506eb 100644
--- a/drivers/net/dsa/sja1105/sja1105_static_config.c
+++ b/drivers/net/dsa/sja1105/sja1105_static_config.c
@@ -16,9 +16,14 @@
  */
 void sja1105_pack(void *buf, const u64 *val, int start, int end, size_t len)
 {
-	int rc = packing(buf, (u64 *)val, start, end, len,
-			 PACK, QUIRK_LSW32_IS_FIRST);
+	u8 quirks = QUIRK_LSW32_IS_FIRST;
+	int rc;
 
+#if defined(__LITTLE_ENDIAN)
+	quirks |= QUIRK_LITTLE_ENDIAN;
+#endif
+
+	rc = packing(buf, (u64 *)val, start, end, len, PACK, quirks);
 	if (likely(!rc))
 		return;
 
@@ -38,9 +43,14 @@ void sja1105_pack(void *buf, const u64 *val, int start, int end, size_t len)
 
 void sja1105_unpack(const void *buf, u64 *val, int start, int end, size_t len)
 {
-	int rc = packing((void *)buf, val, start, end, len,
-			 UNPACK, QUIRK_LSW32_IS_FIRST);
+	u8 quirks = QUIRK_LSW32_IS_FIRST;
+	int rc;
+
+#if defined(__LITTLE_ENDIAN)
+	quirks |= QUIRK_LITTLE_ENDIAN;
+#endif
 
+	rc = packing((void *)buf, val, start, end, len, UNPACK, quirks);
 	if (likely(!rc))
 		return;
 
@@ -56,8 +66,14 @@ void sja1105_unpack(const void *buf, u64 *val, int start, int end, size_t len)
 void sja1105_packing(void *buf, u64 *val, int start, int end,
 		     size_t len, enum packing_op op)
 {
-	int rc = packing(buf, val, start, end, len, op, QUIRK_LSW32_IS_FIRST);
+	u8 quirks = QUIRK_LSW32_IS_FIRST;
+	int rc;
+
+#if defined(__LITTLE_ENDIAN)
+	quirks |= QUIRK_LITTLE_ENDIAN;
+#endif
 
+	rc = packing(buf, val, start, end, len, op, quirks);
 	if (likely(!rc))
 		return;
 
-- 
2.17.1

